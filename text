import pandas as pd

# Load dataset
df = pd.read_csv("owid-co2-data.csv")

# ðŸ”¹ Step 1: Keep only relevant columns
useful_cols = [
    "country", "year", "co2", "co2_per_capita", "co2_growth_prct",
    "coal_co2", "oil_co2", "gas_co2", "cement_co2", "flaring_co2",
    "land_use_change_co2", "total_ghg", "methane", "nitrous_oxide",
    "population", "gdp"
]
df = df[[col for col in useful_cols if col in df.columns]].copy()

# ðŸ”¹ Step 2: Remove aggregate regions
exclude = ["World", "Africa", "Asia", "Europe", "North America", 
           "South America", "Oceania", "European Union (27)"]
df = df[~df["country"].isin(exclude)]

# ðŸ”¹ Step 3: Keep only recent years (example: 1990â€“2024)
df = df[df["year"] >= 1990]

# ðŸ”¹ Step 4: Fill missing COâ‚‚-related values with 0
co2_cols = ["co2","co2_per_capita","co2_growth_prct","coal_co2","oil_co2",
            "gas_co2","cement_co2","flaring_co2","land_use_change_co2",
            "total_ghg","methane","nitrous_oxide"]

for col in co2_cols:
    if col in df.columns:
        df[col] = df[col].fillna(0)

# ðŸ”¹ Step 5: Fill population & GDP via forward/backward fill
df["population"] = df.groupby("country")["population"].ffill().bfill()
df["gdp"] = df.groupby("country")["gdp"].ffill().bfill()

# ðŸ”¹ Step 6: Ensure numeric types
for col in df.columns:
    if col not in ["country", "year"]:
        df[col] = pd.to_numeric(df[col], errors="coerce").fillna(0)

# ðŸ”¹ Step 7: Sort data
df = df.sort_values(by=["country", "year"]).reset_index(drop=True)

# ðŸ”¹ Step 8: Add derived metrics
df["co2_per_gdp"] = df["co2"] / df["gdp"]
df["co2_per_person"] = df["co2"] / df["population"]

# Final check
print(df["year"].min(), "to", df["year"].max())  # confirm range
df.head()
